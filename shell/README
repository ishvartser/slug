$Id: README,v 1.1 2013-06-18 17:32:08-07 - - $

Igor Shvartser
ishvarts@ucsc.edu
CMPS109: Advanced Programming
Professor Wesley Mackey

Assignment 1 : Function Pointers and a Shell

***** NAME *****
yshell — in memory simulated tree shell

***** SYNOPSIS *****
yshell [-@ ﬂags]

***** DESCRIPTION *****
This shell reads commands from stdin and write output to stdout, 
with errors being set to stderr. Each line read by the shell is parsed into 
words by splitting using space characters, with any number of spaces 
between words. There may also be leading and trailing spaces. The ﬁrst word 
on any line is a command to be simulated, and the rest are operands to that
command. If either stdin or stdout is not a tty, each line from stdin is 
echoed to stdout.

***** COMMANDS ***** 
The following commands are interpreted. Error messages are printed and 
nothing is done in the case of invalid operands.

# string
If the ﬁrst non-space character on a line is a hash, the line is a comment 
and is ignored.

cat pathname . . .
The contents of each ﬁle is copied to stdout. An error is reported if no 
ﬁles are speciﬁed, a ﬁle does not exist, or is a directory.

cd [pathname]
The current directory is set the the pathname given. If no pathname is 
speciﬁed, the root directory (/) is used. It is an error if the pathname 
does not exist or is a plain ﬁle, or if more than one operand is given.

echo [words . . .]
The string, which may be empty, is echoed to stdout on a line by itself.

exit [status]
Exit the program with the given status. If the status is missing, exit 
with status 0. If a non-numeric argument is given, exit with status 127.

ls [pathname . . .]
A description of the ﬁles or directories are printed to stdout. It is an 
error if any of the ﬁle or directory does not exist. If no pathname is 
speciﬁed, the current working directory is used. If a pathname speciﬁed 
is a directory, then the contents of the directory are listed. A directory 
listed within a directory is shown by a terminating slash. Elements of a 
directory are listed lexicographically. For each ﬁle listed, output consists 
of the inode number, then the size, then the ﬁlename. Output is lined up 
into columns and each column is separated from the next by two spaces. 
The numeric ﬁelds are exactly 6 characters wide and the units position in a 
column must be aligned.

lsr [pathname . . .]
As for ls, but a recursive depth-ﬁrst preorder traversal is done for 
subdirectories.

make pathname [words . . .]
The ﬁle speciﬁed is created and the rest of the words are put in that ﬁle. 
If the ﬁle already exists, a new one is not created, but its contents are 
replaced. It is an error to specify a directory. If there are no words, the 
ﬁle is empty.

mkdir pathname
A new directory is created. It is an error if a ﬁle or directory of the 
same name already exists, or if the complete pathname to the parent of this 
new directory does not already exist. Two entries are added to the directory, 
namely dot (.) and dotdot (..). Directory entries are always kept in sorted
lexicographic order.

prompt string
Set the prompt to the words speciﬁed on the command line. Each word is 
separated from the next by one space and the prompt itself is terminated by 
an extra space. The default prompt is a single percent sign and a space (% ).

pwd
Prints the current working directory.

rm pathname
The speciﬁed ﬁle or directory is deleted (removed from its parent’s list of 
ﬁles and subdirectories). It is an error for the pathname not to exist. If 
the pathname is a directory, it must be empty.

rmr pathname
A recursive removal is done, using a depth-ﬁrst postorder traversal.


